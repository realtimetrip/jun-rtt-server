# Workflow 이름
name: realtimetrip

# 어떤 이벤트가 발생하면 workflow 실행할 지 명시
on:
  # main 브랜치에 push나 pull request 발생 시
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# 위 이벤트 발생 시 실행될 작업들
jobs:
  build:
    # VM의실행 환경 지정 => 우분투 최신 버전
    runs-on: ubuntu-latest

    # 실행될 jobs를 순서대로 명시
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # JDK 17 설치
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'

    # Gradle Build를 위한 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

      # Gradle Build (test 제외)
    - name: Build with Gradle
      run: ./gradlew clean build --exclude-task test


      # Docker 이미지 빌드
    - name: Build Docker image
      run: docker build --pull --no-cache -t ${{ secrets.DOCKERHUB_USERNAME }}/realtimetrip:latest .

      # DockerHub 로그인
    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # DockerHub에 앞서 빌드한 이미지를 push
    - name: Push Docker image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/realtimetrip:latest

    # EC2 인스턴스로 docker-compose.yml 복사
    - name: Copy docker-compose.yml to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_KEY }}
        source: "docker-compose.yml"
        target: "/home/ubuntu/realtimetrip/"

    # EC2 인스턴스 접속 및 애플리케이션 실행
    - name: Deploy to EC2 and setup environment
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_KEY }}
        port: 22
        script: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          
          cd /home/ubuntu/realtimetrip
          
          # application.yml과 .env 작성
          echo "${{ secrets.APPLICATION }}" > application.yml
          echo "${{ secrets.ENV }}" > .env
          
           # Docker Hub에 로그인
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          
          # Docker Compose를 이용한 서비스 시작
          sudo docker-compose down
          sudo docker-compose pull # Pull the latest image
          sudo docker-compose up -d --build
